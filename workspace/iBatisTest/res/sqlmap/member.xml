<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
			PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
			"http://ibatis.apache.org/dtd/sql-map-2.dtd">
			
<sqlMap namespace="member">
<!-- 
	이 영역에 sql문에 맞는 태그를 사용하여 SQL문을 기술한다.
	
	사용할 수 있는 기본적인 태그들
	
	<select> ~~~ </select>
	<insert> ~~~ </insert>
	<update> ~~~ </update>
	<delete> ~~~ </delete>
	
	위 태그에서 사용되는 속성들
	1) id: 해당 태그를 호출할때 < sqlMap>태그의 namespace와 연결하여 사용하는 이름 -모든쿼리에 사용 => 호출 해야하니
	2) parameterClass 속성 : sql문에 사용될 데이터가 들어있는 객체를 지정한다.
						   (보통 VO클래스, 자바의 자료형 이름 등이 사용 된다.)
	3) resultClass : select문을 실행한 결과를 담을 개체를 지정한다.
					 (보통 VO클래스나 자바의 자료형 이름을 사용한다.)
	4) resultMap : 결과 레코드 컬럼명과 VO객체의 property명이 다를 경우에 적절한 매핑을 위해 사용한다.

  -->
  
  <!-- insert 연습 -->
	<insert id="insertMember" parameterClass="kr.or.ddit.member.vo.MemberVo">
	
		insert into mymember
		(mem_id, mem_name, mem_tel, mem_addr) 
		values (#memId#, #memName#, #memTel#, #memAddr#)
		
	</insert>
	
	<!-- update 연습 -->
	<update id="updateMember" parameterClass="kr.or.ddit.member.vo.MemberVo">
		
		update mymember 
		set mem_name = #memName#
			,mem_tel = #memTel#
		   ,mem_addr = #memAddr# 
		where mem_id = #memId# 	
	
	</update>

	<!-- delete 연습 -->
	<!-- 
		parameterClass에 설정되는 값이 단일값(즉 1개의 데이터) 이면 , sql문에
		이 값을 나타내는 변수는 특별히 이름이 정해지지 않았다.
		(즉, 사욪아가 임의로 지정할 수 있다.)
	 -->
	<delete id="deleteMember" parameterClass="String">
	
		delete from mymember where mem_id = #memId#
	
	</delete>
	
	<!-- select 연습 -->
	<!-- <select id="getMemberAll" resultClass="memVO">
		select mem_id as memId
			  ,mem_name as memName
			  ,mem_tel as memTel
			  ,mem_addr as memAddr
		from mymember 
	</select> -->
	
	
	<!-- resultMap 연습 VS select와 동일 -->
	<resultMap class="memVO" id="memberMap">
		<result property="memId" column="mem_id"/>
		<result property="memName" column="mem_name"/>
		<result property="memTel" column="mem_tel"/>
		<result property="memAddr" column="mem_addr"/>
	</resultMap>

	<select id="getMemberAll" resultMap="memberMap">
		select mem_id
			  ,mem_name 
			  ,mem_tel 
			  ,mem_addr
		from mymember 
	</select>
	
	<select id="getMember" resultClass="int">
		select count (*) as cnt from mymember where mem_id = #memId#
		
	</select>
	
	<select id="getSearchMember" parameterClass="memVO" resultMap="memberMap">
		where 1=1
		<isNotEmpty property="memId">   <!-- if절 표현 널인 경우... 동일 >> 멤버아이디가 비어있으면   -->
		and mem_id = #memId#
		</isNotEmpty>
		<isNotEmpty property="memName">
		and mem_name = #memName#
		</isNotEmpty>
		<isNotEmpty property="memTel">
		and mem_tel = #memTel#
		</isNotEmpty>
		<isNotEmpty property="memAddr">
		and mem_addr like '%' || #memAddr# || '%'
		</isNotEmpty>
		
	</select>
	
	
</sqlMap>			






















